//
// main.cpp
//
// Tommy Avant - August 23, 2013
// Project Euler - Problem 2
//

// header files
// ====== =====
#include <iostream>
#include <cstdlib>

// global constants
// ====== =========


// global variables
// ====== =========


// function specification
// ======== =============


// main program
// ==== =======
int main(int argc, char* argv[]) {

  /*
    Each new term in the Fibonacci sequence is generated by adding the 
    previous two terms. By starting with 1 and 2, the first 10 terms 
    will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do 
    not exceed four million, find the sum of the even-valued terms.
  */

  // initialize main program variables
  int fib1, fib2, tempFib, maxFib, sum = 0;

  // get first two numbers and max number in Fibonacci sequence
  fib1 = atoi(argv[1]);
  fib2 = atoi(argv[2]);
  maxFib = atoi(argv[3]);

  // loop while the Fibonacci sequence is less than
  while(fib2 < maxFib) {

    // if current number in sequence is even
    if((fib2 % 2) == 0) {

      // add the number to the sum of even terms
      sum += fib2;
    }

    // create next number in Fibonacci sequence
    tempFib = fib1 + fib2;
    fib1 = fib2;
    fib2 = tempFib;
  }

  // print final sum to screen
  std::cout << "By considering the terms in the Fibonacci sequence whose"
            << std::endl
            << "values do not exceed " << maxFib << ", the sum of the"
            << std::endl
            << "even-valued terms is: " << sum 
            << std::endl;

  // end main program
  return 0;
}

// function implimentation
// ======== ==============

